(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{778:function(v,_,a){"use strict";a.r(_);var t=a(13),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"为什么要学习这课程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要学习这课程"}},[v._v("#")]),v._v(" 为什么要学习这课程？")]),v._v(" "),a("p",[a("strong",[v._v("JAVA 性能监控与调优")]),v._v("，在开发阶段下基本上不用，但是在 "),a("strong",[v._v("生产环境")]),v._v(" 下就比较重要了。")]),v._v(" "),a("p",[v._v("生产环境比较复杂：")]),v._v(" "),a("ol",[a("li",[a("p",[v._v("硬件问题、网络问题、CPU 利用率高")])]),v._v(" "),a("li",[a("p",[v._v("出现问题后不好进行定位")]),v._v(" "),a("p",[v._v("因为无法像开发环境下那样随随便便就重启应用、修改日志增加日志输出等手段，来进行定位")])])]),v._v(" "),a("p",[v._v("所以对生产环境进行监控是非常有必要的。这里不讲解基于硬件的监控，我们聚焦在 "),a("strong",[v._v("对 JAVA 应用的性能做监控与调优")])]),v._v(" "),a("h2",{attrs:{id:"你将迈过哪些坎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你将迈过哪些坎"}},[v._v("#")]),v._v(" 你将迈过哪些坎？")]),v._v(" "),a("ul",[a("li",[v._v("生产环境发生了内存溢出如何处理？")]),v._v(" "),a("li",[v._v("生产环境应该给服务器分配多少内存合适？")]),v._v(" "),a("li",[v._v("如何对垃圾收集器的性能进行调优？")]),v._v(" "),a("li",[v._v("生产环境 CPU 负载彪高该如何处理？")]),v._v(" "),a("li",[v._v("生产环境应该给应用分配多少线程合适？")]),v._v(" "),a("li",[v._v("不加 log 如何确定请求是否执行了某一行代码？")]),v._v(" "),a("li",[v._v("不加 log 如何实时查看某个方法的入参与返回值？")]),v._v(" "),a("li",[v._v("JVM 的字节码是什么东西？")]),v._v(" "),a("li",[v._v("循环体中做字符串 "),a("code",[v._v("+")]),v._v(" 拼接为什么效率低？")]),v._v(" "),a("li",[v._v("字符串 "),a("code",[v._v("+")]),v._v(" 拼接一定就是 StringBuilder.append 吗？")]),v._v(" "),a("li",[v._v("String 常量池是咋回事？")]),v._v(" "),a("li",[a("code",[v._v("i++")]),v._v(" 与 "),a("code",[v._v("++i")]),v._v(" 到底哪种写法效率更高？")])]),v._v(" "),a("h2",{attrs:{id:"你能收获什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你能收获什么"}},[v._v("#")]),v._v(" 你能收获什么？")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("熟练使用各种监控和调试工具")])]),v._v(" "),a("li",[a("p",[v._v("从容应对生产环境中遇到的各种调试和性能问题")])]),v._v(" "),a("li",[a("p",[v._v("熟悉 JVM 的字节码指令")]),v._v(" "),a("p",[v._v("因为在源码层面上很多问题无法看的很清楚，编译器将很多语法糖都消除了，真正执行的是什么在源码里面不一定能看出来")])]),v._v(" "),a("li",[a("p",[v._v("深入理解 JVM 的自动内存回收机制，学会 GC 调优")])]),v._v(" "),a("li",[a("p",[v._v("从容应对面试中关于性能调优和调试的问题")])]),v._v(" "),a("li",[a("p",[v._v("独当一面走向高级工程师很重要的一步")])])]),v._v(" "),a("h2",{attrs:{id:"适合人群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适合人群"}},[v._v("#")]),v._v(" 适合人群")]),v._v(" "),a("ul",[a("li",[v._v("如果你不熟悉 JAVA 应用监控调优")]),v._v(" "),a("li",[v._v("如果你对 JAVA 应用监控调优感兴趣")]),v._v(" "),a("li",[v._v("如果你想跳槽面试高级工程师")])]),v._v(" "),a("h2",{attrs:{id:"课程如何安排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程如何安排"}},[v._v("#")]),v._v(" 课程如何安排？")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("基于 JDK 命令行工具的监控")]),v._v(" "),a("ul",[a("li",[v._v("如何定位内存溢出")]),v._v(" "),a("li",[v._v("如何定位 CPU 利用率高")])])]),v._v(" "),a("li",[a("p",[v._v("基于 JVisualVM 的可视化监控")]),v._v(" "),a("p",[v._v("相当于将各种命令行工具做了一个集成")])]),v._v(" "),a("li",[a("p",[v._v("基于 Btrace 的监控调试")]),v._v(" "),a("p",[v._v("在不重启应用的情况下，如何知道某个方法的入参和返回值等问题")])]),v._v(" "),a("li",[a("p",[v._v("Tomcat 性能监控与调优")])]),v._v(" "),a("li",[a("p",[v._v("Nginx 性能监控与调优")])]),v._v(" "),a("li",[a("p",[v._v("JVM 层 GC 调优")]),v._v(" "),a("p",[v._v("详细的讲解 JVM 内存结构、垃圾回收器、垃圾回收器日志以及如何分析这些日志、如何评价垃圾回收器的性能高低？")])]),v._v(" "),a("li",[a("p",[v._v("Java 代码层优化")])])]),v._v(" "),a("h3",{attrs:{id:"基于-jdk-命令行工具的监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于-jdk-命令行工具的监控"}},[v._v("#")]),v._v(" 基于 JDK 命令行工具的监控")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("JVM 参数类型")])]),v._v(" "),a("li",[a("p",[v._v("查看运行时 JVM 参数")])]),v._v(" "),a("li",[a("p",[v._v("查看 JVM 统计信息")]),v._v(" "),a("p",[v._v("如类加载信息")])]),v._v(" "),a("li",[a("p",[v._v("jmap + MAT 实战内存溢出")])]),v._v(" "),a("li",[a("p",[v._v("jstack 实战死循环与死锁")])])]),v._v(" "),a("h3",{attrs:{id:"基于-jvisualvm-的可视化监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于-jvisualvm-的可视化监控"}},[v._v("#")]),v._v(" 基于 JVisualVM 的可视化监控")]),v._v(" "),a("p",[v._v("相当于是前面那些命令的一个集成")]),v._v(" "),a("ul",[a("li",[v._v("监控本地 JAVA 进程")]),v._v(" "),a("li",[v._v("监控远程 JAVA 进程")])]),v._v(" "),a("h3",{attrs:{id:"基于-btrace-的监控调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于-btrace-的监控调试"}},[v._v("#")]),v._v(" 基于 Btrace 的监控调试")]),v._v(" "),a("ul",[a("li",[v._v("Btrace 安装使用入门")]),v._v(" "),a("li",[v._v("Btrace 使用详解")])]),v._v(" "),a("p",[v._v("它类似 AOP 的机制，原理很复杂利用了很多高级的知识，本课程还是以使用为主。")]),v._v(" "),a("h3",{attrs:{id:"tomcat-性能监控与调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-性能监控与调优"}},[v._v("#")]),v._v(" Tomcat 性能监控与调优")]),v._v(" "),a("ul",[a("li",[v._v("Tomcat 远程 debug")]),v._v(" "),a("li",[v._v("Tomcat-manager 监控 Tomcat")]),v._v(" "),a("li",[v._v("psi-probe 监控 Tomcat")]),v._v(" "),a("li",[v._v("Tomcat 调优")])]),v._v(" "),a("h3",{attrs:{id:"nginx-性能监控与调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-性能监控与调优"}},[v._v("#")]),v._v(" Nginx 性能监控与调优")]),v._v(" "),a("ul",[a("li",[v._v("ngx_http_stub_status 监控链接信息")]),v._v(" "),a("li",[v._v("ngxtop 监控请求信息")]),v._v(" "),a("li",[v._v("nginx-rrd 图形化监控")]),v._v(" "),a("li",[v._v("nginx 调优")])]),v._v(" "),a("h3",{attrs:{id:"jvm-层-gc-调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-层-gc-调优"}},[v._v("#")]),v._v(" JVM 层 GC 调优")]),v._v(" "),a("ul",[a("li",[v._v("JVM 内存结构：基于 JDK 1.8")]),v._v(" "),a("li",[v._v("垃圾回收算法")]),v._v(" "),a("li",[v._v("垃圾收集器")]),v._v(" "),a("li",[v._v("GC 日志格式与可视化日志分析工具")]),v._v(" "),a("li",[v._v("Tomcat 的 GC 调优实战")])]),v._v(" "),a("h3",{attrs:{id:"java-代码层优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-代码层优化"}},[v._v("#")]),v._v(" Java 代码层优化")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("JVM 字节码指令与 javap")]),v._v(" "),a("p",[v._v("javap 可以将 class 文件中的一些字节码指令打印出来")])]),v._v(" "),a("li",[a("p",[v._v("i++ 与 ++i，字符串 + 拼接原理，string 常量池、intern 方法")])]),v._v(" "),a("li",[a("p",[v._v("常用代码优化方法")])])])])}),[],!1,null,null,null);_.default=i.exports}}]);